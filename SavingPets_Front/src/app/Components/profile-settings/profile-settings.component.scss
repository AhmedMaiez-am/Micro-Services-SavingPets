.profile {
  width: 95%;
  height: 100%;
  background: #f8f8f8;
  box-shadow: 0px 0px 9px rgba(61, 61, 61, 0.28);
  border-radius: 16px;
  padding: 2%;
  position: relative;
}

.container1 {
  background: #ffffff;
  border: 3px solid #03c1ad;
  box-sizing: border-box;
  box-shadow: 0px 0px 18px rgba(0, 0, 0, 0.15);
  border-radius: 21px;
  width: 95%;
  padding: 2%;
  height: 100%;

}

.nav-item {
  margin: 5px 5px 5px -25px;
  width: 98%;
  height: 50px;
  background: #e1e1e1e5;
  border-radius: 30px;
  cursor: pointer;
  text-align: center;
}

.nav-item:checked {
  background: #c0beff;
}

.nav-item:hover {
  background: #E6E5FD;
}

ul li.active {
  background: #cbc9ff;
  border-radius: 20px;
}

ul li {
  height: 60px;
}

.nav {
  flex-direction: column;
}

a {
  text-decoration: none;
  font-family: "Poppins";
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 27px;
  color: #292f33;
  vertical-align: -50%;
  display: flex;
  flex-direction: column;
}

.leftbox {
  float: left;
  top: -5%;
  left: 5%;
  position: relative;
  width: 20%;
  // box-shadow: 3px 3px 10px rgba(gray, 0.5);
  border-right: 6px solid grey;
}



.circle {
  border-radius: 100% !important;
  overflow: hidden;
  width: 128px;
  height: 128px;
  border: 6px solid #03c1ad;
  position: absolute;
  top: 72px;
}






small {
  color: red;
}

.alert-success {
  width: 500px;
  margin-left: 150px;
  text-align: center;
  border-radius: 25px;
  margin-top: 15px;
}


/* img {
  max-width: 120px;
  max-height: 120px;
  border: 4px #03c1ad;
  border-radius: 50%;
} */
.rightbox {
  margin: auto;
  float: right;
  height: 100%;
  margin-left: 150px;
  width: 900px
}

label {
  font-family: "Poppins";
  font-style: normal;
  font-weight: 500;
  font-size: 28px;
  width: 500px;
  color: #3d3d3d;
}

.form-group {
  display: flex;
}

input {
  font-family: "poppins";
  font-style: normal;
  font-weight: 400;
  font-size: 24px;
  color: #3d3d3d;
  max-width: 100%;
  outline: none;
  border-top-style: hidden;
  border-right-style: hidden;
  border-left-style: hidden;
  flex: 1;
}

input:focus {
  border-top-style: hidden;
  border-right-style: hidden;
  border-left-style: hidden;
  outline: none;
}

textarea {
  font-family: "poppins";
  font-style: normal;
  font-weight: 400;
  font-size: 24px;
  color: #3d3d3d;
  outline: none;
  border-top-style: hidden;
  border-right-style: hidden;
  border-left-style: hidden;
}

.picture-container {
  position: relative;
  cursor: pointer;
  text-align: center;
}

.picture {
  width: 206px;
  height: 206px;
  background-color: #999999;
  border: 4px solid #CCCCCC;
  color: #FFFFFF;
  border-radius: 50%;
  margin: 5px auto;
  overflow: hidden;
  transition: all 0.2s;
  -webkit-transition: all 0.2s;
}

.picture-src {
  width: 100%;
  height: 100%;
}

.picture:hover {
  border-color: #4caf50;
}

.picture input[type="file"] {
  cursor: pointer;
  display: block;
  height: 100%;
  left: 0;
  opacity: 0 !important;
  position: absolute;
  top: 0;
  width: 100%;
}




.choice {
  text-align: center;
  cursor: pointer;
}

.choice input[type="radio"],
.choice input[type="checkbox"] {
  position: absolute;
  left: -10000px;
  z-index: -1;
}

.choice .icon {
  text-align: center;
  vertical-align: middle;
  height: 106px;
  width: 106px;
  border-radius: 50%;
  color: #999999;
  margin: 5px auto;
  border: 4px solid #CCCCCC;
  transition: all 0.2s;
  -webkit-transition: all 0.2s;
  overflow: hidden;
}

.choice .icon:hover {
  border-color: #4caf50;
}

.choice.active .icon {
  border-color: #2ca8ff;
}

@media (max-width: 600px) {
  .row {
    flex-direction: column;
  }

  .picture-container {
    text-align: start;
  }

  input,
  select,
  textarea {
    font-size: 15px;
    max-width: 30% !important;

  }

  .picture-container .picture h6 {
    margin: 50px;
  }

  .picture {
    margin: 50px !important;
  }

  .skills1 {
    display: grid;
    grid-template-columns: 2fr;

  }

  .profile {
    margin-left: -70px;
    width: 130%;
    padding: 2%;
  }

  .container1 {
    padding: 5%;
  }

  .leftbox {
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    /* margin-bottom: 40px; */
    border-right: 0;
    border-bottom: 4px solid grey;
    width: 90%;
    display: grid;
    padding-left: 10%;
    grid-template-columns: 2fr 2fr 2fr;
  }

  .nav a {
    height: 80px;
    font-size: 15px;
  }

  .nav-item {
    /* margin-bottom: 70px; */
    height: 80px;
    width: 80px;
    margin-right: 30px;

  }

  .rightbox {
    display: block;
    margin-top: 7%;
    margin-left: 20px;
  }

  label {
    font-size: 20px;
  }

  .container1 {
    align-items: center !important;
  }

  img {
    align-items: center;
  }
}




/* buttons */

// Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.pulse:hover,
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em transparent;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--hover);
  }
}

// Stack multiple shadows, one from the left, the other from the right
.close:hover,
.close:focus {
  box-shadow:
    inset -3.5em 0 0 0 var(--hover),
    inset 3.5em 0 0 0 var(--hover);
}

// Size can also be negative; see how it's smaller than the element
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

// And from the left
.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

// Multiple shadows, one on the outside, another on the inside
.offset {
  box-shadow:
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);

  &:hover,
  &:focus {
    box-shadow:
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
// Make a map with the class names and matching colors
$colors: (
  fill:#03c1ad,
  pulse: #ef6eae,
  close: #ff7f82,
  raise: #ffa260,
  up: #e4cb58,
  slide: #8fc866,
  offset: #19bc8b
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
// Loop through the map and set CSS custom properties using Sass variables
@each $button,
$color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {
  color: var(--color);
  transition: 0.25s;
  border-radius: 15px;

  &:hover,
  &:focus {
    border-color: var(--hover);
    color: #fff;
  }
}

//=== Pen styling, ignore
body {
  color: #fff;
  background: hsl(227, 10%, 10%);
  font: 300 1em 'Fira Sans', sans-serif;

  // Center everything ever
  justify-content: center;
  align-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
  display: flex;
}

// Basic button styles
button {
  background: none;
  border: 2px solid;
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
}

h1 {
  font-weight: 400;
}

code {
  color: #e4cb58;
  font: inherit;
}
